{"version":3,"file":"svelte-csv.js","sources":["../node_modules/svelte/internal/index.mjs","../node_modules/papaparse/papaparse.js","../src/CSVDownloader.svelte","../src/jsonToCSV.svelte","../src/readRemoteFile.svelte","../src/readString.svelte"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true && boolean_attributes.has(name) ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.46.4' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","/* @license\nPapa Parse\nv5.3.1\nhttps://github.com/mholt/PapaParse\nLicense: MIT\n*/\n\n(function(root, factory)\n{\n\t/* globals define */\n\tif (typeof define === 'function' && define.amd)\n\t{\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine([], factory);\n\t}\n\telse if (typeof module === 'object' && typeof exports !== 'undefined')\n\t{\n\t\t// Node. Does not work with strict CommonJS, but\n\t\t// only CommonJS-like environments that support module.exports,\n\t\t// like Node.\n\t\tmodule.exports = factory();\n\t}\n\telse\n\t{\n\t\t// Browser globals (root is window)\n\t\troot.Papa = factory();\n\t}\n\t// in strict mode we cannot access arguments.callee, so we need a named reference to\n\t// stringify the factory method for the blob worker\n\t// eslint-disable-next-line func-name\n}(this, function moduleFactory()\n{\n\t'use strict';\n\n\tvar global = (function() {\n\t\t// alternative method, similar to `Function('return this')()`\n\t\t// but without using `eval` (which is disabled when\n\t\t// using Content Security Policy).\n\n\t\tif (typeof self !== 'undefined') { return self; }\n\t\tif (typeof window !== 'undefined') { return window; }\n\t\tif (typeof global !== 'undefined') { return global; }\n\n\t\t// When running tests none of the above have been defined\n\t\treturn {};\n\t})();\n\n\n\tfunction getWorkerBlob() {\n\t\tvar URL = global.URL || global.webkitURL || null;\n\t\tvar code = moduleFactory.toString();\n\t\treturn Papa.BLOB_URL || (Papa.BLOB_URL = URL.createObjectURL(new Blob(['(', code, ')();'], {type: 'text/javascript'})));\n\t}\n\n\tvar IS_WORKER = !global.document && !!global.postMessage,\n\t\tIS_PAPA_WORKER = IS_WORKER && /blob:/i.test((global.location || {}).protocol);\n\tvar workers = {}, workerIdCounter = 0;\n\n\tvar Papa = {};\n\n\tPapa.parse = CsvToJson;\n\tPapa.unparse = JsonToCsv;\n\n\tPapa.RECORD_SEP = String.fromCharCode(30);\n\tPapa.UNIT_SEP = String.fromCharCode(31);\n\tPapa.BYTE_ORDER_MARK = '\\ufeff';\n\tPapa.BAD_DELIMITERS = ['\\r', '\\n', '\"', Papa.BYTE_ORDER_MARK];\n\tPapa.WORKERS_SUPPORTED = !IS_WORKER && !!global.Worker;\n\tPapa.NODE_STREAM_INPUT = 1;\n\n\t// Configurable chunk sizes for local and remote files, respectively\n\tPapa.LocalChunkSize = 1024 * 1024 * 10;\t// 10 MB\n\tPapa.RemoteChunkSize = 1024 * 1024 * 5;\t// 5 MB\n\tPapa.DefaultDelimiter = ',';\t\t\t// Used if not specified and detection fails\n\n\t// Exposed for testing and development only\n\tPapa.Parser = Parser;\n\tPapa.ParserHandle = ParserHandle;\n\tPapa.NetworkStreamer = NetworkStreamer;\n\tPapa.FileStreamer = FileStreamer;\n\tPapa.StringStreamer = StringStreamer;\n\tPapa.ReadableStreamStreamer = ReadableStreamStreamer;\n\tif (typeof PAPA_BROWSER_CONTEXT === 'undefined') {\n\t\tPapa.DuplexStreamStreamer = DuplexStreamStreamer;\n\t}\n\n\tif (global.jQuery)\n\t{\n\t\tvar $ = global.jQuery;\n\t\t$.fn.parse = function(options)\n\t\t{\n\t\t\tvar config = options.config || {};\n\t\t\tvar queue = [];\n\n\t\t\tthis.each(function(idx)\n\t\t\t{\n\t\t\t\tvar supported = $(this).prop('tagName').toUpperCase() === 'INPUT'\n\t\t\t\t\t\t\t\t&& $(this).attr('type').toLowerCase() === 'file'\n\t\t\t\t\t\t\t\t&& global.FileReader;\n\n\t\t\t\tif (!supported || !this.files || this.files.length === 0)\n\t\t\t\t\treturn true;\t// continue to next input element\n\n\t\t\t\tfor (var i = 0; i < this.files.length; i++)\n\t\t\t\t{\n\t\t\t\t\tqueue.push({\n\t\t\t\t\t\tfile: this.files[i],\n\t\t\t\t\t\tinputElem: this,\n\t\t\t\t\t\tinstanceConfig: $.extend({}, config)\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tparseNextFile();\t// begin parsing\n\t\t\treturn this;\t\t// maintains chainability\n\n\n\t\t\tfunction parseNextFile()\n\t\t\t{\n\t\t\t\tif (queue.length === 0)\n\t\t\t\t{\n\t\t\t\t\tif (isFunction(options.complete))\n\t\t\t\t\t\toptions.complete();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar f = queue[0];\n\n\t\t\t\tif (isFunction(options.before))\n\t\t\t\t{\n\t\t\t\t\tvar returned = options.before(f.file, f.inputElem);\n\n\t\t\t\t\tif (typeof returned === 'object')\n\t\t\t\t\t{\n\t\t\t\t\t\tif (returned.action === 'abort')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\terror('AbortError', f.file, f.inputElem, returned.reason);\n\t\t\t\t\t\t\treturn;\t// Aborts all queued files immediately\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (returned.action === 'skip')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfileComplete();\t// parse the next file in the queue, if any\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (typeof returned.config === 'object')\n\t\t\t\t\t\t\tf.instanceConfig = $.extend(f.instanceConfig, returned.config);\n\t\t\t\t\t}\n\t\t\t\t\telse if (returned === 'skip')\n\t\t\t\t\t{\n\t\t\t\t\t\tfileComplete();\t// parse the next file in the queue, if any\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Wrap up the user's complete callback, if any, so that ours also gets executed\n\t\t\t\tvar userCompleteFunc = f.instanceConfig.complete;\n\t\t\t\tf.instanceConfig.complete = function(results)\n\t\t\t\t{\n\t\t\t\t\tif (isFunction(userCompleteFunc))\n\t\t\t\t\t\tuserCompleteFunc(results, f.file, f.inputElem);\n\t\t\t\t\tfileComplete();\n\t\t\t\t};\n\n\t\t\t\tPapa.parse(f.file, f.instanceConfig);\n\t\t\t}\n\n\t\t\tfunction error(name, file, elem, reason)\n\t\t\t{\n\t\t\t\tif (isFunction(options.error))\n\t\t\t\t\toptions.error({name: name}, file, elem, reason);\n\t\t\t}\n\n\t\t\tfunction fileComplete()\n\t\t\t{\n\t\t\t\tqueue.splice(0, 1);\n\t\t\t\tparseNextFile();\n\t\t\t}\n\t\t};\n\t}\n\n\n\tif (IS_PAPA_WORKER)\n\t{\n\t\tglobal.onmessage = workerThreadReceivedMessage;\n\t}\n\n\n\n\n\tfunction CsvToJson(_input, _config)\n\t{\n\t\t_config = _config || {};\n\t\tvar dynamicTyping = _config.dynamicTyping || false;\n\t\tif (isFunction(dynamicTyping)) {\n\t\t\t_config.dynamicTypingFunction = dynamicTyping;\n\t\t\t// Will be filled on first row call\n\t\t\tdynamicTyping = {};\n\t\t}\n\t\t_config.dynamicTyping = dynamicTyping;\n\n\t\t_config.transform = isFunction(_config.transform) ? _config.transform : false;\n\n\t\tif (_config.worker && Papa.WORKERS_SUPPORTED)\n\t\t{\n\t\t\tvar w = newWorker();\n\n\t\t\tw.userStep = _config.step;\n\t\t\tw.userChunk = _config.chunk;\n\t\t\tw.userComplete = _config.complete;\n\t\t\tw.userError = _config.error;\n\n\t\t\t_config.step = isFunction(_config.step);\n\t\t\t_config.chunk = isFunction(_config.chunk);\n\t\t\t_config.complete = isFunction(_config.complete);\n\t\t\t_config.error = isFunction(_config.error);\n\t\t\tdelete _config.worker;\t// prevent infinite loop\n\n\t\t\tw.postMessage({\n\t\t\t\tinput: _input,\n\t\t\t\tconfig: _config,\n\t\t\t\tworkerId: w.id\n\t\t\t});\n\n\t\t\treturn;\n\t\t}\n\n\t\tvar streamer = null;\n\t\tif (_input === Papa.NODE_STREAM_INPUT && typeof PAPA_BROWSER_CONTEXT === 'undefined')\n\t\t{\n\t\t\t// create a node Duplex stream for use\n\t\t\t// with .pipe\n\t\t\tstreamer = new DuplexStreamStreamer(_config);\n\t\t\treturn streamer.getStream();\n\t\t}\n\t\telse if (typeof _input === 'string')\n\t\t{\n\t\t\tif (_config.download)\n\t\t\t\tstreamer = new NetworkStreamer(_config);\n\t\t\telse\n\t\t\t\tstreamer = new StringStreamer(_config);\n\t\t}\n\t\telse if (_input.readable === true && isFunction(_input.read) && isFunction(_input.on))\n\t\t{\n\t\t\tstreamer = new ReadableStreamStreamer(_config);\n\t\t}\n\t\telse if ((global.File && _input instanceof File) || _input instanceof Object)\t// ...Safari. (see issue #106)\n\t\t\tstreamer = new FileStreamer(_config);\n\n\t\treturn streamer.stream(_input);\n\t}\n\n\n\n\n\n\n\tfunction JsonToCsv(_input, _config)\n\t{\n\t\t// Default configuration\n\n\t\t/** whether to surround every datum with quotes */\n\t\tvar _quotes = false;\n\n\t\t/** whether to write headers */\n\t\tvar _writeHeader = true;\n\n\t\t/** delimiting character(s) */\n\t\tvar _delimiter = ',';\n\n\t\t/** newline character(s) */\n\t\tvar _newline = '\\r\\n';\n\n\t\t/** quote character */\n\t\tvar _quoteChar = '\"';\n\n\t\t/** escaped quote character, either \"\" or <config.escapeChar>\" */\n\t\tvar _escapedQuote = _quoteChar + _quoteChar;\n\n\t\t/** whether to skip empty lines */\n\t\tvar _skipEmptyLines = false;\n\n\t\t/** the columns (keys) we expect when we unparse objects */\n\t\tvar _columns = null;\n\n\t\t/** whether to prevent outputting cells that can be parsed as formulae by spreadsheet software (Excel and LibreOffice) */\n\t\tvar _escapeFormulae = false;\n\n\t\tunpackConfig();\n\n\t\tvar quoteCharRegex = new RegExp(escapeRegExp(_quoteChar), 'g');\n\n\t\tif (typeof _input === 'string')\n\t\t\t_input = JSON.parse(_input);\n\n\t\tif (Array.isArray(_input))\n\t\t{\n\t\t\tif (!_input.length || Array.isArray(_input[0]))\n\t\t\t\treturn serialize(null, _input, _skipEmptyLines);\n\t\t\telse if (typeof _input[0] === 'object')\n\t\t\t\treturn serialize(_columns || Object.keys(_input[0]), _input, _skipEmptyLines);\n\t\t}\n\t\telse if (typeof _input === 'object')\n\t\t{\n\t\t\tif (typeof _input.data === 'string')\n\t\t\t\t_input.data = JSON.parse(_input.data);\n\n\t\t\tif (Array.isArray(_input.data))\n\t\t\t{\n\t\t\t\tif (!_input.fields)\n\t\t\t\t\t_input.fields =  _input.meta && _input.meta.fields;\n\n\t\t\t\tif (!_input.fields)\n\t\t\t\t\t_input.fields =  Array.isArray(_input.data[0])\n\t\t\t\t\t\t? _input.fields\n\t\t\t\t\t\t: typeof _input.data[0] === 'object'\n\t\t\t\t\t\t\t? Object.keys(_input.data[0])\n\t\t\t\t\t\t\t: [];\n\n\t\t\t\tif (!(Array.isArray(_input.data[0])) && typeof _input.data[0] !== 'object')\n\t\t\t\t\t_input.data = [_input.data];\t// handles input like [1,2,3] or ['asdf']\n\t\t\t}\n\n\t\t\treturn serialize(_input.fields || [], _input.data || [], _skipEmptyLines);\n\t\t}\n\n\t\t// Default (any valid paths should return before this)\n\t\tthrow new Error('Unable to serialize unrecognized input');\n\n\n\t\tfunction unpackConfig()\n\t\t{\n\t\t\tif (typeof _config !== 'object')\n\t\t\t\treturn;\n\n\t\t\tif (typeof _config.delimiter === 'string'\n                && !Papa.BAD_DELIMITERS.filter(function(value) { return _config.delimiter.indexOf(value) !== -1; }).length)\n\t\t\t{\n\t\t\t\t_delimiter = _config.delimiter;\n\t\t\t}\n\n\t\t\tif (typeof _config.quotes === 'boolean'\n\t\t\t\t|| typeof _config.quotes === 'function'\n\t\t\t\t|| Array.isArray(_config.quotes))\n\t\t\t\t_quotes = _config.quotes;\n\n\t\t\tif (typeof _config.skipEmptyLines === 'boolean'\n\t\t\t\t|| typeof _config.skipEmptyLines === 'string')\n\t\t\t\t_skipEmptyLines = _config.skipEmptyLines;\n\n\t\t\tif (typeof _config.newline === 'string')\n\t\t\t\t_newline = _config.newline;\n\n\t\t\tif (typeof _config.quoteChar === 'string')\n\t\t\t\t_quoteChar = _config.quoteChar;\n\n\t\t\tif (typeof _config.header === 'boolean')\n\t\t\t\t_writeHeader = _config.header;\n\n\t\t\tif (Array.isArray(_config.columns)) {\n\n\t\t\t\tif (_config.columns.length === 0) throw new Error('Option columns is empty');\n\n\t\t\t\t_columns = _config.columns;\n\t\t\t}\n\n\t\t\tif (_config.escapeChar !== undefined) {\n\t\t\t\t_escapedQuote = _config.escapeChar + _quoteChar;\n\t\t\t}\n\n\t\t\tif (typeof _config.escapeFormulae === 'boolean')\n\t\t\t\t_escapeFormulae = _config.escapeFormulae;\n\t\t}\n\n\n\t\t/** The double for loop that iterates the data and writes out a CSV string including header row */\n\t\tfunction serialize(fields, data, skipEmptyLines)\n\t\t{\n\t\t\tvar csv = '';\n\n\t\t\tif (typeof fields === 'string')\n\t\t\t\tfields = JSON.parse(fields);\n\t\t\tif (typeof data === 'string')\n\t\t\t\tdata = JSON.parse(data);\n\n\t\t\tvar hasHeader = Array.isArray(fields) && fields.length > 0;\n\t\t\tvar dataKeyedByField = !(Array.isArray(data[0]));\n\n\t\t\t// If there a header row, write it first\n\t\t\tif (hasHeader && _writeHeader)\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < fields.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif (i > 0)\n\t\t\t\t\t\tcsv += _delimiter;\n\t\t\t\t\tcsv += safe(fields[i], i);\n\t\t\t\t}\n\t\t\t\tif (data.length > 0)\n\t\t\t\t\tcsv += _newline;\n\t\t\t}\n\n\t\t\t// Then write out the data\n\t\t\tfor (var row = 0; row < data.length; row++)\n\t\t\t{\n\t\t\t\tvar maxCol = hasHeader ? fields.length : data[row].length;\n\n\t\t\t\tvar emptyLine = false;\n\t\t\t\tvar nullLine = hasHeader ? Object.keys(data[row]).length === 0 : data[row].length === 0;\n\t\t\t\tif (skipEmptyLines && !hasHeader)\n\t\t\t\t{\n\t\t\t\t\temptyLine = skipEmptyLines === 'greedy' ? data[row].join('').trim() === '' : data[row].length === 1 && data[row][0].length === 0;\n\t\t\t\t}\n\t\t\t\tif (skipEmptyLines === 'greedy' && hasHeader) {\n\t\t\t\t\tvar line = [];\n\t\t\t\t\tfor (var c = 0; c < maxCol; c++) {\n\t\t\t\t\t\tvar cx = dataKeyedByField ? fields[c] : c;\n\t\t\t\t\t\tline.push(data[row][cx]);\n\t\t\t\t\t}\n\t\t\t\t\temptyLine = line.join('').trim() === '';\n\t\t\t\t}\n\t\t\t\tif (!emptyLine)\n\t\t\t\t{\n\t\t\t\t\tfor (var col = 0; col < maxCol; col++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (col > 0 && !nullLine)\n\t\t\t\t\t\t\tcsv += _delimiter;\n\t\t\t\t\t\tvar colIdx = hasHeader && dataKeyedByField ? fields[col] : col;\n\t\t\t\t\t\tcsv += safe(data[row][colIdx], col);\n\t\t\t\t\t}\n\t\t\t\t\tif (row < data.length - 1 && (!skipEmptyLines || (maxCol > 0 && !nullLine)))\n\t\t\t\t\t{\n\t\t\t\t\t\tcsv += _newline;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn csv;\n\t\t}\n\n\t\t/** Encloses a value around quotes if needed (makes a value safe for CSV insertion) */\n\t\tfunction safe(str, col)\n\t\t{\n\t\t\tif (typeof str === 'undefined' || str === null)\n\t\t\t\treturn '';\n\n\t\t\tif (str.constructor === Date)\n\t\t\t\treturn JSON.stringify(str).slice(1, 25);\n\n\t\t\tif (_escapeFormulae === true && typeof str === \"string\" && (str.match(/^[=+\\-@].*$/) !== null)) {\n\t\t\t\tstr = \"'\" + str;\n\t\t\t}\n\n\t\t\tvar escapedQuoteStr = str.toString().replace(quoteCharRegex, _escapedQuote);\n\n\t\t\tvar needsQuotes = (typeof _quotes === 'boolean' && _quotes)\n\t\t\t\t\t\t\t|| (typeof _quotes === 'function' && _quotes(str, col))\n\t\t\t\t\t\t\t|| (Array.isArray(_quotes) && _quotes[col])\n\t\t\t\t\t\t\t|| hasAny(escapedQuoteStr, Papa.BAD_DELIMITERS)\n\t\t\t\t\t\t\t|| escapedQuoteStr.indexOf(_delimiter) > -1\n\t\t\t\t\t\t\t|| escapedQuoteStr.charAt(0) === ' '\n\t\t\t\t\t\t\t|| escapedQuoteStr.charAt(escapedQuoteStr.length - 1) === ' ';\n\n\t\t\treturn needsQuotes ? _quoteChar + escapedQuoteStr + _quoteChar : escapedQuoteStr;\n\t\t}\n\n\t\tfunction hasAny(str, substrings)\n\t\t{\n\t\t\tfor (var i = 0; i < substrings.length; i++)\n\t\t\t\tif (str.indexOf(substrings[i]) > -1)\n\t\t\t\t\treturn true;\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/** ChunkStreamer is the base prototype for various streamer implementations. */\n\tfunction ChunkStreamer(config)\n\t{\n\t\tthis._handle = null;\n\t\tthis._finished = false;\n\t\tthis._completed = false;\n\t\tthis._halted = false;\n\t\tthis._input = null;\n\t\tthis._baseIndex = 0;\n\t\tthis._partialLine = '';\n\t\tthis._rowCount = 0;\n\t\tthis._start = 0;\n\t\tthis._nextChunk = null;\n\t\tthis.isFirstChunk = true;\n\t\tthis._completeResults = {\n\t\t\tdata: [],\n\t\t\terrors: [],\n\t\t\tmeta: {}\n\t\t};\n\t\treplaceConfig.call(this, config);\n\n\t\tthis.parseChunk = function(chunk, isFakeChunk)\n\t\t{\n\t\t\t// First chunk pre-processing\n\t\t\tif (this.isFirstChunk && isFunction(this._config.beforeFirstChunk))\n\t\t\t{\n\t\t\t\tvar modifiedChunk = this._config.beforeFirstChunk(chunk);\n\t\t\t\tif (modifiedChunk !== undefined)\n\t\t\t\t\tchunk = modifiedChunk;\n\t\t\t}\n\t\t\tthis.isFirstChunk = false;\n\t\t\tthis._halted = false;\n\n\t\t\t// Rejoin the line we likely just split in two by chunking the file\n\t\t\tvar aggregate = this._partialLine + chunk;\n\t\t\tthis._partialLine = '';\n\n\t\t\tvar results = this._handle.parse(aggregate, this._baseIndex, !this._finished);\n\n\t\t\tif (this._handle.paused() || this._handle.aborted()) {\n\t\t\t\tthis._halted = true;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar lastIndex = results.meta.cursor;\n\n\t\t\tif (!this._finished)\n\t\t\t{\n\t\t\t\tthis._partialLine = aggregate.substring(lastIndex - this._baseIndex);\n\t\t\t\tthis._baseIndex = lastIndex;\n\t\t\t}\n\n\t\t\tif (results && results.data)\n\t\t\t\tthis._rowCount += results.data.length;\n\n\t\t\tvar finishedIncludingPreview = this._finished || (this._config.preview && this._rowCount >= this._config.preview);\n\n\t\t\tif (IS_PAPA_WORKER)\n\t\t\t{\n\t\t\t\tglobal.postMessage({\n\t\t\t\t\tresults: results,\n\t\t\t\t\tworkerId: Papa.WORKER_ID,\n\t\t\t\t\tfinished: finishedIncludingPreview\n\t\t\t\t});\n\t\t\t}\n\t\t\telse if (isFunction(this._config.chunk) && !isFakeChunk)\n\t\t\t{\n\t\t\t\tthis._config.chunk(results, this._handle);\n\t\t\t\tif (this._handle.paused() || this._handle.aborted()) {\n\t\t\t\t\tthis._halted = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tresults = undefined;\n\t\t\t\tthis._completeResults = undefined;\n\t\t\t}\n\n\t\t\tif (!this._config.step && !this._config.chunk) {\n\t\t\t\tthis._completeResults.data = this._completeResults.data.concat(results.data);\n\t\t\t\tthis._completeResults.errors = this._completeResults.errors.concat(results.errors);\n\t\t\t\tthis._completeResults.meta = results.meta;\n\t\t\t}\n\n\t\t\tif (!this._completed && finishedIncludingPreview && isFunction(this._config.complete) && (!results || !results.meta.aborted)) {\n\t\t\t\tthis._config.complete(this._completeResults, this._input);\n\t\t\t\tthis._completed = true;\n\t\t\t}\n\n\t\t\tif (!finishedIncludingPreview && (!results || !results.meta.paused))\n\t\t\t\tthis._nextChunk();\n\n\t\t\treturn results;\n\t\t};\n\n\t\tthis._sendError = function(error)\n\t\t{\n\t\t\tif (isFunction(this._config.error))\n\t\t\t\tthis._config.error(error);\n\t\t\telse if (IS_PAPA_WORKER && this._config.error)\n\t\t\t{\n\t\t\t\tglobal.postMessage({\n\t\t\t\t\tworkerId: Papa.WORKER_ID,\n\t\t\t\t\terror: error,\n\t\t\t\t\tfinished: false\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tfunction replaceConfig(config)\n\t\t{\n\t\t\t// Deep-copy the config so we can edit it\n\t\t\tvar configCopy = copy(config);\n\t\t\tconfigCopy.chunkSize = parseInt(configCopy.chunkSize);\t// parseInt VERY important so we don't concatenate strings!\n\t\t\tif (!config.step && !config.chunk)\n\t\t\t\tconfigCopy.chunkSize = null;  // disable Range header if not streaming; bad values break IIS - see issue #196\n\t\t\tthis._handle = new ParserHandle(configCopy);\n\t\t\tthis._handle.streamer = this;\n\t\t\tthis._config = configCopy;\t// persist the copy to the caller\n\t\t}\n\t}\n\n\n\tfunction NetworkStreamer(config)\n\t{\n\t\tconfig = config || {};\n\t\tif (!config.chunkSize)\n\t\t\tconfig.chunkSize = Papa.RemoteChunkSize;\n\t\tChunkStreamer.call(this, config);\n\n\t\tvar xhr;\n\n\t\tif (IS_WORKER)\n\t\t{\n\t\t\tthis._nextChunk = function()\n\t\t\t{\n\t\t\t\tthis._readChunk();\n\t\t\t\tthis._chunkLoaded();\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis._nextChunk = function()\n\t\t\t{\n\t\t\t\tthis._readChunk();\n\t\t\t};\n\t\t}\n\n\t\tthis.stream = function(url)\n\t\t{\n\t\t\tthis._input = url;\n\t\t\tthis._nextChunk();\t// Starts streaming\n\t\t};\n\n\t\tthis._readChunk = function()\n\t\t{\n\t\t\tif (this._finished)\n\t\t\t{\n\t\t\t\tthis._chunkLoaded();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\txhr = new XMLHttpRequest();\n\n\t\t\tif (this._config.withCredentials)\n\t\t\t{\n\t\t\t\txhr.withCredentials = this._config.withCredentials;\n\t\t\t}\n\n\t\t\tif (!IS_WORKER)\n\t\t\t{\n\t\t\t\txhr.onload = bindFunction(this._chunkLoaded, this);\n\t\t\t\txhr.onerror = bindFunction(this._chunkError, this);\n\t\t\t}\n\n\t\t\txhr.open(this._config.downloadRequestBody ? 'POST' : 'GET', this._input, !IS_WORKER);\n\t\t\t// Headers can only be set when once the request state is OPENED\n\t\t\tif (this._config.downloadRequestHeaders)\n\t\t\t{\n\t\t\t\tvar headers = this._config.downloadRequestHeaders;\n\n\t\t\t\tfor (var headerName in headers)\n\t\t\t\t{\n\t\t\t\t\txhr.setRequestHeader(headerName, headers[headerName]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this._config.chunkSize)\n\t\t\t{\n\t\t\t\tvar end = this._start + this._config.chunkSize - 1;\t// minus one because byte range is inclusive\n\t\t\t\txhr.setRequestHeader('Range', 'bytes=' + this._start + '-' + end);\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\txhr.send(this._config.downloadRequestBody);\n\t\t\t}\n\t\t\tcatch (err) {\n\t\t\t\tthis._chunkError(err.message);\n\t\t\t}\n\n\t\t\tif (IS_WORKER && xhr.status === 0)\n\t\t\t\tthis._chunkError();\n\t\t};\n\n\t\tthis._chunkLoaded = function()\n\t\t{\n\t\t\tif (xhr.readyState !== 4)\n\t\t\t\treturn;\n\n\t\t\tif (xhr.status < 200 || xhr.status >= 400)\n\t\t\t{\n\t\t\t\tthis._chunkError();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Use chunckSize as it may be a diference on reponse lentgh due to characters with more than 1 byte\n\t\t\tthis._start += this._config.chunkSize ? this._config.chunkSize : xhr.responseText.length;\n\t\t\tthis._finished = !this._config.chunkSize || this._start >= getFileSize(xhr);\n\t\t\tthis.parseChunk(xhr.responseText);\n\t\t};\n\n\t\tthis._chunkError = function(errorMessage)\n\t\t{\n\t\t\tvar errorText = xhr.statusText || errorMessage;\n\t\t\tthis._sendError(new Error(errorText));\n\t\t};\n\n\t\tfunction getFileSize(xhr)\n\t\t{\n\t\t\tvar contentRange = xhr.getResponseHeader('Content-Range');\n\t\t\tif (contentRange === null) { // no content range, then finish!\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn parseInt(contentRange.substring(contentRange.lastIndexOf('/') + 1));\n\t\t}\n\t}\n\tNetworkStreamer.prototype = Object.create(ChunkStreamer.prototype);\n\tNetworkStreamer.prototype.constructor = NetworkStreamer;\n\n\n\tfunction FileStreamer(config)\n\t{\n\t\tconfig = config || {};\n\t\tif (!config.chunkSize)\n\t\t\tconfig.chunkSize = Papa.LocalChunkSize;\n\t\tChunkStreamer.call(this, config);\n\n\t\tvar reader, slice;\n\n\t\t// FileReader is better than FileReaderSync (even in worker) - see http://stackoverflow.com/q/24708649/1048862\n\t\t// But Firefox is a pill, too - see issue #76: https://github.com/mholt/PapaParse/issues/76\n\t\tvar usingAsyncReader = typeof FileReader !== 'undefined';\t// Safari doesn't consider it a function - see issue #105\n\n\t\tthis.stream = function(file)\n\t\t{\n\t\t\tthis._input = file;\n\t\t\tslice = file.slice || file.webkitSlice || file.mozSlice;\n\n\t\t\tif (usingAsyncReader)\n\t\t\t{\n\t\t\t\treader = new FileReader();\t\t// Preferred method of reading files, even in workers\n\t\t\t\treader.onload = bindFunction(this._chunkLoaded, this);\n\t\t\t\treader.onerror = bindFunction(this._chunkError, this);\n\t\t\t}\n\t\t\telse\n\t\t\t\treader = new FileReaderSync();\t// Hack for running in a web worker in Firefox\n\n\t\t\tthis._nextChunk();\t// Starts streaming\n\t\t};\n\n\t\tthis._nextChunk = function()\n\t\t{\n\t\t\tif (!this._finished && (!this._config.preview || this._rowCount < this._config.preview))\n\t\t\t\tthis._readChunk();\n\t\t};\n\n\t\tthis._readChunk = function()\n\t\t{\n\t\t\tvar input = this._input;\n\t\t\tif (this._config.chunkSize)\n\t\t\t{\n\t\t\t\tvar end = Math.min(this._start + this._config.chunkSize, this._input.size);\n\t\t\t\tinput = slice.call(input, this._start, end);\n\t\t\t}\n\t\t\tvar txt = reader.readAsText(input, this._config.encoding);\n\t\t\tif (!usingAsyncReader)\n\t\t\t\tthis._chunkLoaded({ target: { result: txt } });\t// mimic the async signature\n\t\t};\n\n\t\tthis._chunkLoaded = function(event)\n\t\t{\n\t\t\t// Very important to increment start each time before handling results\n\t\t\tthis._start += this._config.chunkSize;\n\t\t\tthis._finished = !this._config.chunkSize || this._start >= this._input.size;\n\t\t\tthis.parseChunk(event.target.result);\n\t\t};\n\n\t\tthis._chunkError = function()\n\t\t{\n\t\t\tthis._sendError(reader.error);\n\t\t};\n\n\t}\n\tFileStreamer.prototype = Object.create(ChunkStreamer.prototype);\n\tFileStreamer.prototype.constructor = FileStreamer;\n\n\n\tfunction StringStreamer(config)\n\t{\n\t\tconfig = config || {};\n\t\tChunkStreamer.call(this, config);\n\n\t\tvar remaining;\n\t\tthis.stream = function(s)\n\t\t{\n\t\t\tremaining = s;\n\t\t\treturn this._nextChunk();\n\t\t};\n\t\tthis._nextChunk = function()\n\t\t{\n\t\t\tif (this._finished) return;\n\t\t\tvar size = this._config.chunkSize;\n\t\t\tvar chunk;\n\t\t\tif(size) {\n\t\t\t\tchunk = remaining.substring(0, size);\n\t\t\t\tremaining = remaining.substring(size);\n\t\t\t} else {\n\t\t\t\tchunk = remaining;\n\t\t\t\tremaining = '';\n\t\t\t}\n\t\t\tthis._finished = !remaining;\n\t\t\treturn this.parseChunk(chunk);\n\t\t};\n\t}\n\tStringStreamer.prototype = Object.create(StringStreamer.prototype);\n\tStringStreamer.prototype.constructor = StringStreamer;\n\n\n\tfunction ReadableStreamStreamer(config)\n\t{\n\t\tconfig = config || {};\n\n\t\tChunkStreamer.call(this, config);\n\n\t\tvar queue = [];\n\t\tvar parseOnData = true;\n\t\tvar streamHasEnded = false;\n\n\t\tthis.pause = function()\n\t\t{\n\t\t\tChunkStreamer.prototype.pause.apply(this, arguments);\n\t\t\tthis._input.pause();\n\t\t};\n\n\t\tthis.resume = function()\n\t\t{\n\t\t\tChunkStreamer.prototype.resume.apply(this, arguments);\n\t\t\tthis._input.resume();\n\t\t};\n\n\t\tthis.stream = function(stream)\n\t\t{\n\t\t\tthis._input = stream;\n\n\t\t\tthis._input.on('data', this._streamData);\n\t\t\tthis._input.on('end', this._streamEnd);\n\t\t\tthis._input.on('error', this._streamError);\n\t\t};\n\n\t\tthis._checkIsFinished = function()\n\t\t{\n\t\t\tif (streamHasEnded && queue.length === 1) {\n\t\t\t\tthis._finished = true;\n\t\t\t}\n\t\t};\n\n\t\tthis._nextChunk = function()\n\t\t{\n\t\t\tthis._checkIsFinished();\n\t\t\tif (queue.length)\n\t\t\t{\n\t\t\t\tthis.parseChunk(queue.shift());\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tparseOnData = true;\n\t\t\t}\n\t\t};\n\n\t\tthis._streamData = bindFunction(function(chunk)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tqueue.push(typeof chunk === 'string' ? chunk : chunk.toString(this._config.encoding));\n\n\t\t\t\tif (parseOnData)\n\t\t\t\t{\n\t\t\t\t\tparseOnData = false;\n\t\t\t\t\tthis._checkIsFinished();\n\t\t\t\t\tthis.parseChunk(queue.shift());\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (error)\n\t\t\t{\n\t\t\t\tthis._streamError(error);\n\t\t\t}\n\t\t}, this);\n\n\t\tthis._streamError = bindFunction(function(error)\n\t\t{\n\t\t\tthis._streamCleanUp();\n\t\t\tthis._sendError(error);\n\t\t}, this);\n\n\t\tthis._streamEnd = bindFunction(function()\n\t\t{\n\t\t\tthis._streamCleanUp();\n\t\t\tstreamHasEnded = true;\n\t\t\tthis._streamData('');\n\t\t}, this);\n\n\t\tthis._streamCleanUp = bindFunction(function()\n\t\t{\n\t\t\tthis._input.removeListener('data', this._streamData);\n\t\t\tthis._input.removeListener('end', this._streamEnd);\n\t\t\tthis._input.removeListener('error', this._streamError);\n\t\t}, this);\n\t}\n\tReadableStreamStreamer.prototype = Object.create(ChunkStreamer.prototype);\n\tReadableStreamStreamer.prototype.constructor = ReadableStreamStreamer;\n\n\n\tfunction DuplexStreamStreamer(_config) {\n\t\tvar Duplex = require('stream').Duplex;\n\t\tvar config = copy(_config);\n\t\tvar parseOnWrite = true;\n\t\tvar writeStreamHasFinished = false;\n\t\tvar parseCallbackQueue = [];\n\t\tvar stream = null;\n\n\t\tthis._onCsvData = function(results)\n\t\t{\n\t\t\tvar data = results.data;\n\t\t\tif (!stream.push(data) && !this._handle.paused()) {\n\t\t\t\t// the writeable consumer buffer has filled up\n\t\t\t\t// so we need to pause until more items\n\t\t\t\t// can be processed\n\t\t\t\tthis._handle.pause();\n\t\t\t}\n\t\t};\n\n\t\tthis._onCsvComplete = function()\n\t\t{\n\t\t\t// node will finish the read stream when\n\t\t\t// null is pushed\n\t\t\tstream.push(null);\n\t\t};\n\n\t\tconfig.step = bindFunction(this._onCsvData, this);\n\t\tconfig.complete = bindFunction(this._onCsvComplete, this);\n\t\tChunkStreamer.call(this, config);\n\n\t\tthis._nextChunk = function()\n\t\t{\n\t\t\tif (writeStreamHasFinished && parseCallbackQueue.length === 1) {\n\t\t\t\tthis._finished = true;\n\t\t\t}\n\t\t\tif (parseCallbackQueue.length) {\n\t\t\t\tparseCallbackQueue.shift()();\n\t\t\t} else {\n\t\t\t\tparseOnWrite = true;\n\t\t\t}\n\t\t};\n\n\t\tthis._addToParseQueue = function(chunk, callback)\n\t\t{\n\t\t\t// add to queue so that we can indicate\n\t\t\t// completion via callback\n\t\t\t// node will automatically pause the incoming stream\n\t\t\t// when too many items have been added without their\n\t\t\t// callback being invoked\n\t\t\tparseCallbackQueue.push(bindFunction(function() {\n\t\t\t\tthis.parseChunk(typeof chunk === 'string' ? chunk : chunk.toString(config.encoding));\n\t\t\t\tif (isFunction(callback)) {\n\t\t\t\t\treturn callback();\n\t\t\t\t}\n\t\t\t}, this));\n\t\t\tif (parseOnWrite) {\n\t\t\t\tparseOnWrite = false;\n\t\t\t\tthis._nextChunk();\n\t\t\t}\n\t\t};\n\n\t\tthis._onRead = function()\n\t\t{\n\t\t\tif (this._handle.paused()) {\n\t\t\t\t// the writeable consumer can handle more data\n\t\t\t\t// so resume the chunk parsing\n\t\t\t\tthis._handle.resume();\n\t\t\t}\n\t\t};\n\n\t\tthis._onWrite = function(chunk, encoding, callback)\n\t\t{\n\t\t\tthis._addToParseQueue(chunk, callback);\n\t\t};\n\n\t\tthis._onWriteComplete = function()\n\t\t{\n\t\t\twriteStreamHasFinished = true;\n\t\t\t// have to write empty string\n\t\t\t// so parser knows its done\n\t\t\tthis._addToParseQueue('');\n\t\t};\n\n\t\tthis.getStream = function()\n\t\t{\n\t\t\treturn stream;\n\t\t};\n\t\tstream = new Duplex({\n\t\t\treadableObjectMode: true,\n\t\t\tdecodeStrings: false,\n\t\t\tread: bindFunction(this._onRead, this),\n\t\t\twrite: bindFunction(this._onWrite, this)\n\t\t});\n\t\tstream.once('finish', bindFunction(this._onWriteComplete, this));\n\t}\n\tif (typeof PAPA_BROWSER_CONTEXT === 'undefined') {\n\t\tDuplexStreamStreamer.prototype = Object.create(ChunkStreamer.prototype);\n\t\tDuplexStreamStreamer.prototype.constructor = DuplexStreamStreamer;\n\t}\n\n\n\t// Use one ParserHandle per entire CSV file or string\n\tfunction ParserHandle(_config)\n\t{\n\t\t// One goal is to minimize the use of regular expressions...\n\t\tvar MAX_FLOAT = Math.pow(2, 53);\n\t\tvar MIN_FLOAT = -MAX_FLOAT;\n\t\tvar FLOAT = /^\\s*-?(\\d+\\.?|\\.\\d+|\\d+\\.\\d+)([eE][-+]?\\d+)?\\s*$/;\n\t\tvar ISO_DATE = /^(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))$/;\n\t\tvar self = this;\n\t\tvar _stepCounter = 0;\t// Number of times step was called (number of rows parsed)\n\t\tvar _rowCounter = 0;\t// Number of rows that have been parsed so far\n\t\tvar _input;\t\t\t\t// The input being parsed\n\t\tvar _parser;\t\t\t// The core parser being used\n\t\tvar _paused = false;\t// Whether we are paused or not\n\t\tvar _aborted = false;\t// Whether the parser has aborted or not\n\t\tvar _delimiterError;\t// Temporary state between delimiter detection and processing results\n\t\tvar _fields = [];\t\t// Fields are from the header row of the input, if there is one\n\t\tvar _results = {\t\t// The last results returned from the parser\n\t\t\tdata: [],\n\t\t\terrors: [],\n\t\t\tmeta: {}\n\t\t};\n\n\t\tif (isFunction(_config.step))\n\t\t{\n\t\t\tvar userStep = _config.step;\n\t\t\t_config.step = function(results)\n\t\t\t{\n\t\t\t\t_results = results;\n\n\t\t\t\tif (needsHeaderRow())\n\t\t\t\t\tprocessResults();\n\t\t\t\telse\t// only call user's step function after header row\n\t\t\t\t{\n\t\t\t\t\tprocessResults();\n\n\t\t\t\t\t// It's possbile that this line was empty and there's no row here after all\n\t\t\t\t\tif (_results.data.length === 0)\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t_stepCounter += results.data.length;\n\t\t\t\t\tif (_config.preview && _stepCounter > _config.preview)\n\t\t\t\t\t\t_parser.abort();\n\t\t\t\t\telse {\n\t\t\t\t\t\t_results.data = _results.data[0];\n\t\t\t\t\t\tuserStep(_results, self);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\t/**\n\t\t * Parses input. Most users won't need, and shouldn't mess with, the baseIndex\n\t\t * and ignoreLastRow parameters. They are used by streamers (wrapper functions)\n\t\t * when an input comes in multiple chunks, like from a file.\n\t\t */\n\t\tthis.parse = function(input, baseIndex, ignoreLastRow)\n\t\t{\n\t\t\tvar quoteChar = _config.quoteChar || '\"';\n\t\t\tif (!_config.newline)\n\t\t\t\t_config.newline = guessLineEndings(input, quoteChar);\n\n\t\t\t_delimiterError = false;\n\t\t\tif (!_config.delimiter)\n\t\t\t{\n\t\t\t\tvar delimGuess = guessDelimiter(input, _config.newline, _config.skipEmptyLines, _config.comments, _config.delimitersToGuess);\n\t\t\t\tif (delimGuess.successful)\n\t\t\t\t\t_config.delimiter = delimGuess.bestDelimiter;\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t_delimiterError = true;\t// add error after parsing (otherwise it would be overwritten)\n\t\t\t\t\t_config.delimiter = Papa.DefaultDelimiter;\n\t\t\t\t}\n\t\t\t\t_results.meta.delimiter = _config.delimiter;\n\t\t\t}\n\t\t\telse if(isFunction(_config.delimiter))\n\t\t\t{\n\t\t\t\t_config.delimiter = _config.delimiter(input);\n\t\t\t\t_results.meta.delimiter = _config.delimiter;\n\t\t\t}\n\n\t\t\tvar parserConfig = copy(_config);\n\t\t\tif (_config.preview && _config.header)\n\t\t\t\tparserConfig.preview++;\t// to compensate for header row\n\n\t\t\t_input = input;\n\t\t\t_parser = new Parser(parserConfig);\n\t\t\t_results = _parser.parse(_input, baseIndex, ignoreLastRow);\n\t\t\tprocessResults();\n\t\t\treturn _paused ? { meta: { paused: true } } : (_results || { meta: { paused: false } });\n\t\t};\n\n\t\tthis.paused = function()\n\t\t{\n\t\t\treturn _paused;\n\t\t};\n\n\t\tthis.pause = function()\n\t\t{\n\t\t\t_paused = true;\n\t\t\t_parser.abort();\n\n\t\t\t// If it is streaming via \"chunking\", the reader will start appending correctly already so no need to substring,\n\t\t\t// otherwise we can get duplicate content within a row\n\t\t\t_input = isFunction(_config.chunk) ? \"\" : _input.substring(_parser.getCharIndex());\n\t\t};\n\n\t\tthis.resume = function()\n\t\t{\n\t\t\tif(self.streamer._halted) {\n\t\t\t\t_paused = false;\n\t\t\t\tself.streamer.parseChunk(_input, true);\n\t\t\t} else {\n\t\t\t\t// Bugfix: #636 In case the processing hasn't halted yet\n\t\t\t\t// wait for it to halt in order to resume\n\t\t\t\tsetTimeout(self.resume, 3);\n\t\t\t}\n\t\t};\n\n\t\tthis.aborted = function()\n\t\t{\n\t\t\treturn _aborted;\n\t\t};\n\n\t\tthis.abort = function()\n\t\t{\n\t\t\t_aborted = true;\n\t\t\t_parser.abort();\n\t\t\t_results.meta.aborted = true;\n\t\t\tif (isFunction(_config.complete))\n\t\t\t\t_config.complete(_results);\n\t\t\t_input = '';\n\t\t};\n\n\t\tfunction testEmptyLine(s) {\n\t\t\treturn _config.skipEmptyLines === 'greedy' ? s.join('').trim() === '' : s.length === 1 && s[0].length === 0;\n\t\t}\n\n\t\tfunction testFloat(s) {\n\t\t\tif (FLOAT.test(s)) {\n\t\t\t\tvar floatValue = parseFloat(s);\n\t\t\t\tif (floatValue > MIN_FLOAT && floatValue < MAX_FLOAT) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\tfunction processResults()\n\t\t{\n\t\t\tif (_results && _delimiterError)\n\t\t\t{\n\t\t\t\taddError('Delimiter', 'UndetectableDelimiter', 'Unable to auto-detect delimiting character; defaulted to \\'' + Papa.DefaultDelimiter + '\\'');\n\t\t\t\t_delimiterError = false;\n\t\t\t}\n\n\t\t\tif (_config.skipEmptyLines)\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < _results.data.length; i++)\n\t\t\t\t\tif (testEmptyLine(_results.data[i]))\n\t\t\t\t\t\t_results.data.splice(i--, 1);\n\t\t\t}\n\n\t\t\tif (needsHeaderRow())\n\t\t\t\tfillHeaderFields();\n\n\t\t\treturn applyHeaderAndDynamicTypingAndTransformation();\n\t\t}\n\n\t\tfunction needsHeaderRow()\n\t\t{\n\t\t\treturn _config.header && _fields.length === 0;\n\t\t}\n\n\t\tfunction fillHeaderFields()\n\t\t{\n\t\t\tif (!_results)\n\t\t\t\treturn;\n\n\t\t\tfunction addHeader(header, i)\n\t\t\t{\n\t\t\t\tif (isFunction(_config.transformHeader))\n\t\t\t\t\theader = _config.transformHeader(header, i);\n\n\t\t\t\t_fields.push(header);\n\t\t\t}\n\n\t\t\tif (Array.isArray(_results.data[0]))\n\t\t\t{\n\t\t\t\tfor (var i = 0; needsHeaderRow() && i < _results.data.length; i++)\n\t\t\t\t\t_results.data[i].forEach(addHeader);\n\n\t\t\t\t_results.data.splice(0, 1);\n\t\t\t}\n\t\t\t// if _results.data[0] is not an array, we are in a step where _results.data is the row.\n\t\t\telse\n\t\t\t\t_results.data.forEach(addHeader);\n\t\t}\n\n\t\tfunction shouldApplyDynamicTyping(field) {\n\t\t\t// Cache function values to avoid calling it for each row\n\t\t\tif (_config.dynamicTypingFunction && _config.dynamicTyping[field] === undefined) {\n\t\t\t\t_config.dynamicTyping[field] = _config.dynamicTypingFunction(field);\n\t\t\t}\n\t\t\treturn (_config.dynamicTyping[field] || _config.dynamicTyping) === true;\n\t\t}\n\n\t\tfunction parseDynamic(field, value)\n\t\t{\n\t\t\tif (shouldApplyDynamicTyping(field))\n\t\t\t{\n\t\t\t\tif (value === 'true' || value === 'TRUE')\n\t\t\t\t\treturn true;\n\t\t\t\telse if (value === 'false' || value === 'FALSE')\n\t\t\t\t\treturn false;\n\t\t\t\telse if (testFloat(value))\n\t\t\t\t\treturn parseFloat(value);\n\t\t\t\telse if (ISO_DATE.test(value))\n\t\t\t\t\treturn new Date(value);\n\t\t\t\telse\n\t\t\t\t\treturn (value === '' ? null : value);\n\t\t\t}\n\t\t\treturn value;\n\t\t}\n\n\t\tfunction applyHeaderAndDynamicTypingAndTransformation()\n\t\t{\n\t\t\tif (!_results || (!_config.header && !_config.dynamicTyping && !_config.transform))\n\t\t\t\treturn _results;\n\n\t\t\tfunction processRow(rowSource, i)\n\t\t\t{\n\t\t\t\tvar row = _config.header ? {} : [];\n\n\t\t\t\tvar j;\n\t\t\t\tfor (j = 0; j < rowSource.length; j++)\n\t\t\t\t{\n\t\t\t\t\tvar field = j;\n\t\t\t\t\tvar value = rowSource[j];\n\n\t\t\t\t\tif (_config.header)\n\t\t\t\t\t\tfield = j >= _fields.length ? '__parsed_extra' : _fields[j];\n\n\t\t\t\t\tif (_config.transform)\n\t\t\t\t\t\tvalue = _config.transform(value,field);\n\n\t\t\t\t\tvalue = parseDynamic(field, value);\n\n\t\t\t\t\tif (field === '__parsed_extra')\n\t\t\t\t\t{\n\t\t\t\t\t\trow[field] = row[field] || [];\n\t\t\t\t\t\trow[field].push(value);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\trow[field] = value;\n\t\t\t\t}\n\n\n\t\t\t\tif (_config.header)\n\t\t\t\t{\n\t\t\t\t\tif (j > _fields.length)\n\t\t\t\t\t\taddError('FieldMismatch', 'TooManyFields', 'Too many fields: expected ' + _fields.length + ' fields but parsed ' + j, _rowCounter + i);\n\t\t\t\t\telse if (j < _fields.length)\n\t\t\t\t\t\taddError('FieldMismatch', 'TooFewFields', 'Too few fields: expected ' + _fields.length + ' fields but parsed ' + j, _rowCounter + i);\n\t\t\t\t}\n\n\t\t\t\treturn row;\n\t\t\t}\n\n\t\t\tvar incrementBy = 1;\n\t\t\tif (!_results.data.length || Array.isArray(_results.data[0]))\n\t\t\t{\n\t\t\t\t_results.data = _results.data.map(processRow);\n\t\t\t\tincrementBy = _results.data.length;\n\t\t\t}\n\t\t\telse\n\t\t\t\t_results.data = processRow(_results.data, 0);\n\n\n\t\t\tif (_config.header && _results.meta)\n\t\t\t\t_results.meta.fields = _fields;\n\n\t\t\t_rowCounter += incrementBy;\n\t\t\treturn _results;\n\t\t}\n\n\t\tfunction guessDelimiter(input, newline, skipEmptyLines, comments, delimitersToGuess) {\n\t\t\tvar bestDelim, bestDelta, fieldCountPrevRow, maxFieldCount;\n\n\t\t\tdelimitersToGuess = delimitersToGuess || [',', '\\t', '|', ';', Papa.RECORD_SEP, Papa.UNIT_SEP];\n\n\t\t\tfor (var i = 0; i < delimitersToGuess.length; i++) {\n\t\t\t\tvar delim = delimitersToGuess[i];\n\t\t\t\tvar delta = 0, avgFieldCount = 0, emptyLinesCount = 0;\n\t\t\t\tfieldCountPrevRow = undefined;\n\n\t\t\t\tvar preview = new Parser({\n\t\t\t\t\tcomments: comments,\n\t\t\t\t\tdelimiter: delim,\n\t\t\t\t\tnewline: newline,\n\t\t\t\t\tpreview: 10\n\t\t\t\t}).parse(input);\n\n\t\t\t\tfor (var j = 0; j < preview.data.length; j++) {\n\t\t\t\t\tif (skipEmptyLines && testEmptyLine(preview.data[j])) {\n\t\t\t\t\t\temptyLinesCount++;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tvar fieldCount = preview.data[j].length;\n\t\t\t\t\tavgFieldCount += fieldCount;\n\n\t\t\t\t\tif (typeof fieldCountPrevRow === 'undefined') {\n\t\t\t\t\t\tfieldCountPrevRow = fieldCount;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\telse if (fieldCount > 0) {\n\t\t\t\t\t\tdelta += Math.abs(fieldCount - fieldCountPrevRow);\n\t\t\t\t\t\tfieldCountPrevRow = fieldCount;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (preview.data.length > 0)\n\t\t\t\t\tavgFieldCount /= (preview.data.length - emptyLinesCount);\n\n\t\t\t\tif ((typeof bestDelta === 'undefined' || delta <= bestDelta)\n\t\t\t\t\t&& (typeof maxFieldCount === 'undefined' || avgFieldCount > maxFieldCount) && avgFieldCount > 1.99) {\n\t\t\t\t\tbestDelta = delta;\n\t\t\t\t\tbestDelim = delim;\n\t\t\t\t\tmaxFieldCount = avgFieldCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_config.delimiter = bestDelim;\n\n\t\t\treturn {\n\t\t\t\tsuccessful: !!bestDelim,\n\t\t\t\tbestDelimiter: bestDelim\n\t\t\t};\n\t\t}\n\n\t\tfunction guessLineEndings(input, quoteChar)\n\t\t{\n\t\t\tinput = input.substring(0, 1024 * 1024);\t// max length 1 MB\n\t\t\t// Replace all the text inside quotes\n\t\t\tvar re = new RegExp(escapeRegExp(quoteChar) + '([^]*?)' + escapeRegExp(quoteChar), 'gm');\n\t\t\tinput = input.replace(re, '');\n\n\t\t\tvar r = input.split('\\r');\n\n\t\t\tvar n = input.split('\\n');\n\n\t\t\tvar nAppearsFirst = (n.length > 1 && n[0].length < r[0].length);\n\n\t\t\tif (r.length === 1 || nAppearsFirst)\n\t\t\t\treturn '\\n';\n\n\t\t\tvar numWithN = 0;\n\t\t\tfor (var i = 0; i < r.length; i++)\n\t\t\t{\n\t\t\t\tif (r[i][0] === '\\n')\n\t\t\t\t\tnumWithN++;\n\t\t\t}\n\n\t\t\treturn numWithN >= r.length / 2 ? '\\r\\n' : '\\r';\n\t\t}\n\n\t\tfunction addError(type, code, msg, row)\n\t\t{\n\t\t\tvar error = {\n\t\t\t\ttype: type,\n\t\t\t\tcode: code,\n\t\t\t\tmessage: msg\n\t\t\t};\n\t\t\tif(row !== undefined) {\n\t\t\t\terror.row = row;\n\t\t\t}\n\t\t\t_results.errors.push(error);\n\t\t}\n\t}\n\n\t/** https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions */\n\tfunction escapeRegExp(string)\n\t{\n\t\treturn string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\n\t}\n\n\t/** The core parser implements speedy and correct CSV parsing */\n\tfunction Parser(config)\n\t{\n\t\t// Unpack the config object\n\t\tconfig = config || {};\n\t\tvar delim = config.delimiter;\n\t\tvar newline = config.newline;\n\t\tvar comments = config.comments;\n\t\tvar step = config.step;\n\t\tvar preview = config.preview;\n\t\tvar fastMode = config.fastMode;\n\t\tvar quoteChar;\n\t\t/** Allows for no quoteChar by setting quoteChar to undefined in config */\n\t\tif (config.quoteChar === undefined) {\n\t\t\tquoteChar = '\"';\n\t\t} else {\n\t\t\tquoteChar = config.quoteChar;\n\t\t}\n\t\tvar escapeChar = quoteChar;\n\t\tif (config.escapeChar !== undefined) {\n\t\t\tescapeChar = config.escapeChar;\n\t\t}\n\n\t\t// Delimiter must be valid\n\t\tif (typeof delim !== 'string'\n\t\t\t|| Papa.BAD_DELIMITERS.indexOf(delim) > -1)\n\t\t\tdelim = ',';\n\n\t\t// Comment character must be valid\n\t\tif (comments === delim)\n\t\t\tthrow new Error('Comment character same as delimiter');\n\t\telse if (comments === true)\n\t\t\tcomments = '#';\n\t\telse if (typeof comments !== 'string'\n\t\t\t|| Papa.BAD_DELIMITERS.indexOf(comments) > -1)\n\t\t\tcomments = false;\n\n\t\t// Newline must be valid: \\r, \\n, or \\r\\n\n\t\tif (newline !== '\\n' && newline !== '\\r' && newline !== '\\r\\n')\n\t\t\tnewline = '\\n';\n\n\t\t// We're gonna need these at the Parser scope\n\t\tvar cursor = 0;\n\t\tvar aborted = false;\n\n\t\tthis.parse = function(input, baseIndex, ignoreLastRow)\n\t\t{\n\t\t\t// For some reason, in Chrome, this speeds things up (!?)\n\t\t\tif (typeof input !== 'string')\n\t\t\t\tthrow new Error('Input must be a string');\n\n\t\t\t// We don't need to compute some of these every time parse() is called,\n\t\t\t// but having them in a more local scope seems to perform better\n\t\t\tvar inputLen = input.length,\n\t\t\t\tdelimLen = delim.length,\n\t\t\t\tnewlineLen = newline.length,\n\t\t\t\tcommentsLen = comments.length;\n\t\t\tvar stepIsFunction = isFunction(step);\n\n\t\t\t// Establish starting state\n\t\t\tcursor = 0;\n\t\t\tvar data = [], errors = [], row = [], lastCursor = 0;\n\n\t\t\tif (!input)\n\t\t\t\treturn returnable();\n\n\t\t\tif (fastMode || (fastMode !== false && input.indexOf(quoteChar) === -1))\n\t\t\t{\n\t\t\t\tvar rows = input.split(newline);\n\t\t\t\tfor (var i = 0; i < rows.length; i++)\n\t\t\t\t{\n\t\t\t\t\trow = rows[i];\n\t\t\t\t\tcursor += row.length;\n\t\t\t\t\tif (i !== rows.length - 1)\n\t\t\t\t\t\tcursor += newline.length;\n\t\t\t\t\telse if (ignoreLastRow)\n\t\t\t\t\t\treturn returnable();\n\t\t\t\t\tif (comments && row.substring(0, commentsLen) === comments)\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tif (stepIsFunction)\n\t\t\t\t\t{\n\t\t\t\t\t\tdata = [];\n\t\t\t\t\t\tpushRow(row.split(delim));\n\t\t\t\t\t\tdoStep();\n\t\t\t\t\t\tif (aborted)\n\t\t\t\t\t\t\treturn returnable();\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\tpushRow(row.split(delim));\n\t\t\t\t\tif (preview && i >= preview)\n\t\t\t\t\t{\n\t\t\t\t\t\tdata = data.slice(0, preview);\n\t\t\t\t\t\treturn returnable(true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn returnable();\n\t\t\t}\n\n\t\t\tvar nextDelim = input.indexOf(delim, cursor);\n\t\t\tvar nextNewline = input.indexOf(newline, cursor);\n\t\t\tvar quoteCharRegex = new RegExp(escapeRegExp(escapeChar) + escapeRegExp(quoteChar), 'g');\n\t\t\tvar quoteSearch = input.indexOf(quoteChar, cursor);\n\n\t\t\t// Parser loop\n\t\t\tfor (;;)\n\t\t\t{\n\t\t\t\t// Field has opening quote\n\t\t\t\tif (input[cursor] === quoteChar)\n\t\t\t\t{\n\t\t\t\t\t// Start our search for the closing quote where the cursor is\n\t\t\t\t\tquoteSearch = cursor;\n\n\t\t\t\t\t// Skip the opening quote\n\t\t\t\t\tcursor++;\n\n\t\t\t\t\tfor (;;)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Find closing quote\n\t\t\t\t\t\tquoteSearch = input.indexOf(quoteChar, quoteSearch + 1);\n\n\t\t\t\t\t\t//No other quotes are found - no other delimiters\n\t\t\t\t\t\tif (quoteSearch === -1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (!ignoreLastRow) {\n\t\t\t\t\t\t\t\t// No closing quote... what a pity\n\t\t\t\t\t\t\t\terrors.push({\n\t\t\t\t\t\t\t\t\ttype: 'Quotes',\n\t\t\t\t\t\t\t\t\tcode: 'MissingQuotes',\n\t\t\t\t\t\t\t\t\tmessage: 'Quoted field unterminated',\n\t\t\t\t\t\t\t\t\trow: data.length,\t// row has yet to be inserted\n\t\t\t\t\t\t\t\t\tindex: cursor\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn finish();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Closing quote at EOF\n\t\t\t\t\t\tif (quoteSearch === inputLen - 1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar value = input.substring(cursor, quoteSearch).replace(quoteCharRegex, quoteChar);\n\t\t\t\t\t\t\treturn finish(value);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// If this quote is escaped, it's part of the data; skip it\n\t\t\t\t\t\t// If the quote character is the escape character, then check if the next character is the escape character\n\t\t\t\t\t\tif (quoteChar === escapeChar &&  input[quoteSearch + 1] === escapeChar)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tquoteSearch++;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// If the quote character is not the escape character, then check if the previous character was the escape character\n\t\t\t\t\t\tif (quoteChar !== escapeChar && quoteSearch !== 0 && input[quoteSearch - 1] === escapeChar)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(nextDelim !== -1 && nextDelim < (quoteSearch + 1)) {\n\t\t\t\t\t\t\tnextDelim = input.indexOf(delim, (quoteSearch + 1));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(nextNewline !== -1 && nextNewline < (quoteSearch + 1)) {\n\t\t\t\t\t\t\tnextNewline = input.indexOf(newline, (quoteSearch + 1));\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Check up to nextDelim or nextNewline, whichever is closest\n\t\t\t\t\t\tvar checkUpTo = nextNewline === -1 ? nextDelim : Math.min(nextDelim, nextNewline);\n\t\t\t\t\t\tvar spacesBetweenQuoteAndDelimiter = extraSpaces(checkUpTo);\n\n\t\t\t\t\t\t// Closing quote followed by delimiter or 'unnecessary spaces + delimiter'\n\t\t\t\t\t\tif (input[quoteSearch + 1 + spacesBetweenQuoteAndDelimiter] === delim)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\trow.push(input.substring(cursor, quoteSearch).replace(quoteCharRegex, quoteChar));\n\t\t\t\t\t\t\tcursor = quoteSearch + 1 + spacesBetweenQuoteAndDelimiter + delimLen;\n\n\t\t\t\t\t\t\t// If char after following delimiter is not quoteChar, we find next quote char position\n\t\t\t\t\t\t\tif (input[quoteSearch + 1 + spacesBetweenQuoteAndDelimiter + delimLen] !== quoteChar)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tquoteSearch = input.indexOf(quoteChar, cursor);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tnextDelim = input.indexOf(delim, cursor);\n\t\t\t\t\t\t\tnextNewline = input.indexOf(newline, cursor);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar spacesBetweenQuoteAndNewLine = extraSpaces(nextNewline);\n\n\t\t\t\t\t\t// Closing quote followed by newline or 'unnecessary spaces + newLine'\n\t\t\t\t\t\tif (input.substring(quoteSearch + 1 + spacesBetweenQuoteAndNewLine, quoteSearch + 1 + spacesBetweenQuoteAndNewLine + newlineLen) === newline)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\trow.push(input.substring(cursor, quoteSearch).replace(quoteCharRegex, quoteChar));\n\t\t\t\t\t\t\tsaveRow(quoteSearch + 1 + spacesBetweenQuoteAndNewLine + newlineLen);\n\t\t\t\t\t\t\tnextDelim = input.indexOf(delim, cursor);\t// because we may have skipped the nextDelim in the quoted field\n\t\t\t\t\t\t\tquoteSearch = input.indexOf(quoteChar, cursor);\t// we search for first quote in next line\n\n\t\t\t\t\t\t\tif (stepIsFunction)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdoStep();\n\t\t\t\t\t\t\t\tif (aborted)\n\t\t\t\t\t\t\t\t\treturn returnable();\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (preview && data.length >= preview)\n\t\t\t\t\t\t\t\treturn returnable(true);\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\t// Checks for valid closing quotes are complete (escaped quotes or quote followed by EOF/delimiter/newline) -- assume these quotes are part of an invalid text string\n\t\t\t\t\t\terrors.push({\n\t\t\t\t\t\t\ttype: 'Quotes',\n\t\t\t\t\t\t\tcode: 'InvalidQuotes',\n\t\t\t\t\t\t\tmessage: 'Trailing quote on quoted field is malformed',\n\t\t\t\t\t\t\trow: data.length,\t// row has yet to be inserted\n\t\t\t\t\t\t\tindex: cursor\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tquoteSearch++;\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Comment found at start of new line\n\t\t\t\tif (comments && row.length === 0 && input.substring(cursor, cursor + commentsLen) === comments)\n\t\t\t\t{\n\t\t\t\t\tif (nextNewline === -1)\t// Comment ends at EOF\n\t\t\t\t\t\treturn returnable();\n\t\t\t\t\tcursor = nextNewline + newlineLen;\n\t\t\t\t\tnextNewline = input.indexOf(newline, cursor);\n\t\t\t\t\tnextDelim = input.indexOf(delim, cursor);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Next delimiter comes before next newline, so we've reached end of field\n\t\t\t\tif (nextDelim !== -1 && (nextDelim < nextNewline || nextNewline === -1))\n\t\t\t\t{\n\t\t\t\t\trow.push(input.substring(cursor, nextDelim));\n\t\t\t\t\tcursor = nextDelim + delimLen;\n\t\t\t\t\t// we look for next delimiter char\n\t\t\t\t\tnextDelim = input.indexOf(delim, cursor);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// End of row\n\t\t\t\tif (nextNewline !== -1)\n\t\t\t\t{\n\t\t\t\t\trow.push(input.substring(cursor, nextNewline));\n\t\t\t\t\tsaveRow(nextNewline + newlineLen);\n\n\t\t\t\t\tif (stepIsFunction)\n\t\t\t\t\t{\n\t\t\t\t\t\tdoStep();\n\t\t\t\t\t\tif (aborted)\n\t\t\t\t\t\t\treturn returnable();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (preview && data.length >= preview)\n\t\t\t\t\t\treturn returnable(true);\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\n\t\t\treturn finish();\n\n\n\t\t\tfunction pushRow(row)\n\t\t\t{\n\t\t\t\tdata.push(row);\n\t\t\t\tlastCursor = cursor;\n\t\t\t}\n\n\t\t\t/**\n             * checks if there are extra spaces after closing quote and given index without any text\n             * if Yes, returns the number of spaces\n             */\n\t\t\tfunction extraSpaces(index) {\n\t\t\t\tvar spaceLength = 0;\n\t\t\t\tif (index !== -1) {\n\t\t\t\t\tvar textBetweenClosingQuoteAndIndex = input.substring(quoteSearch + 1, index);\n\t\t\t\t\tif (textBetweenClosingQuoteAndIndex && textBetweenClosingQuoteAndIndex.trim() === '') {\n\t\t\t\t\t\tspaceLength = textBetweenClosingQuoteAndIndex.length;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn spaceLength;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Appends the remaining input from cursor to the end into\n\t\t\t * row, saves the row, calls step, and returns the results.\n\t\t\t */\n\t\t\tfunction finish(value)\n\t\t\t{\n\t\t\t\tif (ignoreLastRow)\n\t\t\t\t\treturn returnable();\n\t\t\t\tif (typeof value === 'undefined')\n\t\t\t\t\tvalue = input.substring(cursor);\n\t\t\t\trow.push(value);\n\t\t\t\tcursor = inputLen;\t// important in case parsing is paused\n\t\t\t\tpushRow(row);\n\t\t\t\tif (stepIsFunction)\n\t\t\t\t\tdoStep();\n\t\t\t\treturn returnable();\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Appends the current row to the results. It sets the cursor\n\t\t\t * to newCursor and finds the nextNewline. The caller should\n\t\t\t * take care to execute user's step function and check for\n\t\t\t * preview and end parsing if necessary.\n\t\t\t */\n\t\t\tfunction saveRow(newCursor)\n\t\t\t{\n\t\t\t\tcursor = newCursor;\n\t\t\t\tpushRow(row);\n\t\t\t\trow = [];\n\t\t\t\tnextNewline = input.indexOf(newline, cursor);\n\t\t\t}\n\n\t\t\t/** Returns an object with the results, errors, and meta. */\n\t\t\tfunction returnable(stopped)\n\t\t\t{\n\t\t\t\treturn {\n\t\t\t\t\tdata: data,\n\t\t\t\t\terrors: errors,\n\t\t\t\t\tmeta: {\n\t\t\t\t\t\tdelimiter: delim,\n\t\t\t\t\t\tlinebreak: newline,\n\t\t\t\t\t\taborted: aborted,\n\t\t\t\t\t\ttruncated: !!stopped,\n\t\t\t\t\t\tcursor: lastCursor + (baseIndex || 0)\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t/** Executes the user's step function and resets data & errors. */\n\t\t\tfunction doStep()\n\t\t\t{\n\t\t\t\tstep(returnable());\n\t\t\t\tdata = [];\n\t\t\t\terrors = [];\n\t\t\t}\n\t\t};\n\n\t\t/** Sets the abort flag */\n\t\tthis.abort = function()\n\t\t{\n\t\t\taborted = true;\n\t\t};\n\n\t\t/** Gets the cursor position */\n\t\tthis.getCharIndex = function()\n\t\t{\n\t\t\treturn cursor;\n\t\t};\n\t}\n\n\n\tfunction newWorker()\n\t{\n\t\tif (!Papa.WORKERS_SUPPORTED)\n\t\t\treturn false;\n\n\t\tvar workerUrl = getWorkerBlob();\n\t\tvar w = new global.Worker(workerUrl);\n\t\tw.onmessage = mainThreadReceivedMessage;\n\t\tw.id = workerIdCounter++;\n\t\tworkers[w.id] = w;\n\t\treturn w;\n\t}\n\n\t/** Callback when main thread receives a message */\n\tfunction mainThreadReceivedMessage(e)\n\t{\n\t\tvar msg = e.data;\n\t\tvar worker = workers[msg.workerId];\n\t\tvar aborted = false;\n\n\t\tif (msg.error)\n\t\t\tworker.userError(msg.error, msg.file);\n\t\telse if (msg.results && msg.results.data)\n\t\t{\n\t\t\tvar abort = function() {\n\t\t\t\taborted = true;\n\t\t\t\tcompleteWorker(msg.workerId, { data: [], errors: [], meta: { aborted: true } });\n\t\t\t};\n\n\t\t\tvar handle = {\n\t\t\t\tabort: abort,\n\t\t\t\tpause: notImplemented,\n\t\t\t\tresume: notImplemented\n\t\t\t};\n\n\t\t\tif (isFunction(worker.userStep))\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < msg.results.data.length; i++)\n\t\t\t\t{\n\t\t\t\t\tworker.userStep({\n\t\t\t\t\t\tdata: msg.results.data[i],\n\t\t\t\t\t\terrors: msg.results.errors,\n\t\t\t\t\t\tmeta: msg.results.meta\n\t\t\t\t\t}, handle);\n\t\t\t\t\tif (aborted)\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdelete msg.results;\t// free memory ASAP\n\t\t\t}\n\t\t\telse if (isFunction(worker.userChunk))\n\t\t\t{\n\t\t\t\tworker.userChunk(msg.results, handle, msg.file);\n\t\t\t\tdelete msg.results;\n\t\t\t}\n\t\t}\n\n\t\tif (msg.finished && !aborted)\n\t\t\tcompleteWorker(msg.workerId, msg.results);\n\t}\n\n\tfunction completeWorker(workerId, results) {\n\t\tvar worker = workers[workerId];\n\t\tif (isFunction(worker.userComplete))\n\t\t\tworker.userComplete(results);\n\t\tworker.terminate();\n\t\tdelete workers[workerId];\n\t}\n\n\tfunction notImplemented() {\n\t\tthrow new Error('Not implemented.');\n\t}\n\n\t/** Callback when worker thread receives a message */\n\tfunction workerThreadReceivedMessage(e)\n\t{\n\t\tvar msg = e.data;\n\n\t\tif (typeof Papa.WORKER_ID === 'undefined' && msg)\n\t\t\tPapa.WORKER_ID = msg.workerId;\n\n\t\tif (typeof msg.input === 'string')\n\t\t{\n\t\t\tglobal.postMessage({\n\t\t\t\tworkerId: Papa.WORKER_ID,\n\t\t\t\tresults: Papa.parse(msg.input, msg.config),\n\t\t\t\tfinished: true\n\t\t\t});\n\t\t}\n\t\telse if ((global.File && msg.input instanceof File) || msg.input instanceof Object)\t// thank you, Safari (see issue #106)\n\t\t{\n\t\t\tvar results = Papa.parse(msg.input, msg.config);\n\t\t\tif (results)\n\t\t\t\tglobal.postMessage({\n\t\t\t\t\tworkerId: Papa.WORKER_ID,\n\t\t\t\t\tresults: results,\n\t\t\t\t\tfinished: true\n\t\t\t\t});\n\t\t}\n\t}\n\n\t/** Makes a deep copy of an array or object (mostly) */\n\tfunction copy(obj)\n\t{\n\t\tif (typeof obj !== 'object' || obj === null)\n\t\t\treturn obj;\n\t\tvar cpy = Array.isArray(obj) ? [] : {};\n\t\tfor (var key in obj)\n\t\t\tcpy[key] = copy(obj[key]);\n\t\treturn cpy;\n\t}\n\n\tfunction bindFunction(f, self)\n\t{\n\t\treturn function() { f.apply(self, arguments); };\n\t}\n\n\tfunction isFunction(func)\n\t{\n\t\treturn typeof func === 'function';\n\t}\n\n\treturn Papa;\n}));\n","<script>\n  import PapaParse from 'papaparse';\n  export let data;\n  export let filename = 'filename';\n  export let type = 'link';\n  export let bom = 2;\n  function download(data, filename, bom) {\n    const bomCode = bom ? '\\ufeff' : '';\n    let csvContent = null;\n    if (typeof data === 'object') {\n      csvContent = PapaParse.unparse(data);\n    } else {\n      csvContent = data;\n    }\n    const csvData = new Blob([`${bomCode}${csvContent}`], {\n      type: 'text/csv;charset=utf-8;'\n    });\n    let csvURL = null;\n    if (navigator.msSaveBlob) {\n      csvURL = navigator.msSaveBlob(csvData, `${filename}.csv`);\n    } else {\n      csvURL = window.URL.createObjectURL(csvData);\n    }\n    const link = document.createElement('a');\n    link.href = csvURL;\n    link.setAttribute('download', `${filename}.csv`);\n    link.click();\n    link.remove();\n  }\n</script>\n\n{#if type === 'link'}\n  <span on:click={download(data, filename, bom)} class=\"link\">\n    <slot />\n  </span>\n{:else}\n  <button on:click={download(data, filename, bom)}>\n    <slot />\n  </button>\n{/if}\n\n<style>\n  .link {\n    color: blue;\n    text-decoration: underline;\n    cursor: pointer;\n  }\n</style>\n","<script>\n  import PapaParse from 'papaparse';\n\n  export function jsonToCSV(json, options) {\n    return PapaParse.unparse(json, options);\n  }\n</script>\n","<script>\n  import PapaParse from 'papaparse';\n\n  export function readRemoteFile(url, options) {\n    PapaParse.parse(url, Object.assign({}, { download: true }, options));\n  }\n</script>\n","<script>\n  import PapaParse from 'papaparse';\n\n  export function readString(str, options) {\n    return PapaParse.parse(str, options);\n  }\n</script>\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","tar","src","k","assign","slice","get_slot_changes","dirty","lets","undefined","merged","len","Math","max","length","i","update_slot_base","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","p","get_all_dirty_from_scope","current_component","is_hydrating","upper_bound","low","high","key","value","mid","append_styles","target","style_sheet_id","styles","append_styles_to","node","document","root","getRootNode","ownerDocument","host","get_root_for_style","getElementById","style","element","id","textContent","appendChild","append","head","append_stylesheet","append_hydration","hydrate_init","children","childNodes","nodeName","myChildren","claim_order","push","m","Int32Array","longest","current","seqLen","idx","newLen","lis","toMove","last","cur","reverse","sort","j","anchor","insertBefore","init_hydrate","actual_end_child","parentElement","firstChild","nextSibling","parentNode","insert_hydration","detach","removeChild","name","createElement","empty","data","createTextNode","listen","event","handler","options","addEventListener","removeEventListener","Array","from","claim_element","nodes","attributes","create_element","predicate","processNode","createNode","dontUpdateLastIndex","claim_info","last_index","total_claimed","init_claim_info","resultNode","replacement","splice","claim_node","remove","attribute","v","removeAttribute","claim_element_base","set_current_component","component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","seen_callbacks","Set","flushidx","flush","saved_component","update","$$","pop","callback","has","add","clear","fragment","before_update","after_update","outroing","outros","transition_in","block","local","delete","transition_out","o","c","d","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","parent_component","bound","on_mount","on_destroy","on_disconnect","context","Map","callbacks","skip_bound","ready","ret","rest","hydrate","l","intro","customElement","new_on_destroy","map","filter","mount_component","SvelteComponent","$destroy","detaching","destroy_component","this","$on","type","index","indexOf","$set","$$props","obj","$$set","keys","module","moduleFactory","global","self","window","getWorkerBlob","URL","webkitURL","code","toString","Papa","BLOB_URL","createObjectURL","Blob","IS_WORKER","postMessage","IS_PAPA_WORKER","test","location","protocol","workers","workerIdCounter","parse","CsvToJson","unparse","JsonToCsv","RECORD_SEP","String","fromCharCode","UNIT_SEP","BYTE_ORDER_MARK","BAD_DELIMITERS","WORKERS_SUPPORTED","Worker","NODE_STREAM_INPUT","LocalChunkSize","RemoteChunkSize","DefaultDelimiter","Parser","ParserHandle","NetworkStreamer","FileStreamer","StringStreamer","ReadableStreamStreamer","PAPA_BROWSER_CONTEXT","DuplexStreamStreamer","jQuery","$","config","queue","each","prop","toUpperCase","attr","toLowerCase","FileReader","files","file","inputElem","instanceConfig","extend","parseNextFile","f","isFunction","before","returned","action","error","reason","fileComplete","userCompleteFunc","complete","results","elem","_input","_config","dynamicTyping","dynamicTypingFunction","transform","worker","w","newWorker","userStep","step","userChunk","chunk","userComplete","userError","input","workerId","streamer","getStream","download","readable","read","on","File","stream","_quotes","_writeHeader","_delimiter","_newline","_quoteChar","_escapedQuote","_skipEmptyLines","_columns","_escapeFormulae","unpackConfig","quoteCharRegex","RegExp","escapeRegExp","JSON","isArray","serialize","fields","meta","Error","delimiter","quotes","skipEmptyLines","newline","quoteChar","header","columns","escapeChar","escapeFormulae","csv","hasHeader","dataKeyedByField","safe","row","maxCol","emptyLine","nullLine","join","trim","line","cx","col","colIdx","str","constructor","Date","stringify","match","escapedQuoteStr","replace","hasAny","charAt","substrings","ChunkStreamer","replaceConfig","configCopy","copy","chunkSize","parseInt","_handle","_finished","_completed","_halted","_baseIndex","_partialLine","_rowCount","_start","_nextChunk","isFirstChunk","_completeResults","errors","call","parseChunk","isFakeChunk","beforeFirstChunk","modifiedChunk","aggregate","paused","aborted","lastIndex","cursor","substring","finishedIncludingPreview","preview","WORKER_ID","finished","concat","_sendError","xhr","getFileSize","contentRange","getResponseHeader","lastIndexOf","_readChunk","_chunkLoaded","url","XMLHttpRequest","withCredentials","onload","bindFunction","onerror","_chunkError","open","downloadRequestBody","downloadRequestHeaders","headers","headerName","setRequestHeader","end","send","err","message","status","readyState","responseText","errorMessage","errorText","statusText","reader","usingAsyncReader","webkitSlice","mozSlice","FileReaderSync","min","size","txt","readAsText","encoding","result","remaining","s","parseOnData","streamHasEnded","pause","prototype","apply","arguments","resume","_streamData","_streamEnd","_streamError","_checkIsFinished","shift","_streamCleanUp","removeListener","Duplex","require$$0","parseOnWrite","writeStreamHasFinished","parseCallbackQueue","_onCsvData","_onCsvComplete","_addToParseQueue","_onRead","_onWrite","_onWriteComplete","readableObjectMode","decodeStrings","write","once","_parser","_delimiterError","MAX_FLOAT","pow","MIN_FLOAT","FLOAT","ISO_DATE","_stepCounter","_rowCounter","_paused","_aborted","_fields","_results","needsHeaderRow","processResults","abort","testEmptyLine","testFloat","floatValue","parseFloat","addError","fillHeaderFields","applyHeaderAndDynamicTypingAndTransformation","addHeader","transformHeader","shouldApplyDynamicTyping","field","parseDynamic","processRow","rowSource","incrementBy","guessDelimiter","comments","delimitersToGuess","bestDelim","bestDelta","fieldCountPrevRow","maxFieldCount","delim","delta","avgFieldCount","emptyLinesCount","fieldCount","abs","successful","bestDelimiter","guessLineEndings","re","r","split","n","nAppearsFirst","numWithN","msg","baseIndex","ignoreLastRow","delimGuess","parserConfig","getCharIndex","setTimeout","string","fastMode","inputLen","delimLen","newlineLen","commentsLen","stepIsFunction","lastCursor","returnable","rows","pushRow","doStep","nextDelim","nextNewline","quoteSearch","saveRow","finish","spacesBetweenQuoteAndDelimiter","extraSpaces","spacesBetweenQuoteAndNewLine","spaceLength","textBetweenClosingQuoteAndIndex","newCursor","stopped","linebreak","truncated","workerUrl","onmessage","mainThreadReceivedMessage","e","handle","completeWorker","notImplemented","terminate","workerThreadReceivedMessage","cpy","func","factory","getAttribute","setAttribute","filename","bom","bomCode","csvContent","PapaParse","csvData","csvURL","navigator","msSaveBlob","link","href","click","json"],"mappings":"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"}